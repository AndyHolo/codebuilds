dist: trusty
# services:
#   - docker
cache:
  directories:
    - ./cache
branches:
  only:
    - /^2017.*$/

# x86 toolchain (used as a base for non-sudo compilation, which is faster) 
include: &toolchain_x86
  language: cpp
  addons:
    apt:
      sources:
        - ubuntu-toolchain-r-test
      packages:
        - gcc-4.9
        - g++-4.9
        - gcc-4.9-multilib
        - g++-4.9-multilib
        - libc6-dev-i386
        - zip
        - libgtk2.0-0
        - libx11-dev
        - libxkbfile-dev
        
# OSX amd64 toolchain
include: &toolchain_osx_amd64
  <<: *toolchain_x86
  env:
    - LABEL=amd64_osx
    - ARCH=amd64
    - GPP_COMPILER=g++
    - GCC_COMPILER=gcc
    - VSCODE_ELECTRON_PLATFORM=x64
        
# linux amd64 toolchain
include: &toolchain_linux_amd64
  <<: *toolchain_x86
  env:
    - LABEL=amd64_linux
    - ARCH=amd64
    - GPP_COMPILER=g++-4.9
    - GCC_COMPILER=gcc-4.9
    - VSCODE_ELECTRON_PLATFORM=x64
    - PACKAGE_ARCH=x64
    
# cross toolchain (used as a base for multiarch cross-compilation configurations below) 
include: &toolchain_linux_cross
  sudo: required # for dpkg --add-architecture locking
  language: generic
  
# armhf toolchain
include: &toolchain_linux_armhf
  <<: *toolchain_linux_cross
  env:
    - LABEL=armhf_linux
    - CROSS_TOOLCHAIN=true
    - ARCH=armhf
    - NPM_ARCH=arm
    - GNU_TRIPLET=arm-linux-gnueabihf
    - GNU_MULTILIB_TRIPLET=arm-linux-gnueabihf
    - GPP_COMPILER=arm-linux-gnueabihf-g++
    - GCC_COMPILER=arm-linux-gnueabihf-gcc
    - VSCODE_ELECTRON_PLATFORM=arm
    - PACKAGE_ARCH=armhf
    - QEMU_ARCH=arm
  
# arm64 toolchain
include: &toolchain_linux_arm64
  <<: *toolchain_linux_cross
  env:
    - LABEL=arm64_linux
    - CROSS_TOOLCHAIN=true
    - ARCH=arm64
    - NPM_ARCH=arm
    - GNU_TRIPLET=aarch64-linux-gnu
    - GNU_MULTILIB_TRIPLET=arm-linux-gnueabihf
    - GPP_COMPILER=aarch64-linux-gnu-g++
    - GCC_COMPILER=aarch64-linux-gnu-gcc
    - VSCODE_ELECTRON_PLATFORM=arm
    - PACKAGE_ARCH=arm64
    - QEMU_ARCH=aarch64

# Travis CI build matrix.  Each entry below will trigger an extra, parallel build on Travis.
matrix:
  include:
  - os: linux
    <<: *toolchain_linux_amd64
  - os: linux
    <<: *toolchain_linux_armhf
  - os: linux
    <<: *toolchain_linux_arm64
    
notifications:
  email: false
  
script:
  - . ./codebuilds-tools/environment.sh
  - . ./codebuilds-tools/build.sh
  - . ./codebuilds-tools/prepare_tests.sh
  - echo "Starting test..."
  # - ./scripts/test.sh
  - echo "Starting integration tests..."
  # - ./scripts/test-integration.sh
  - . ./codebuilds-tools/package.sh

deploy:
  provider: releases
  api_key: "$GITHUB_TOKEN"
  file_glob: true
  file:
    - .build/linux/**/*.deb
    - .build/linux/**/*.rpm
    - ./buildlog_*.txt
    - ./archive_*.tar.gz
  skip_cleanup: true
  on:
    repo: headmelted/codebuilds
    tags: true
    
after_deploy:
  - cd codebuild-tools;
  - bash ./pushToBintray.sh ../.build/linux/**/*.deb;
  - bash ./pushToBintray.sh ../.build/linux/**/*.rpm;
